// Code generated by protoc-gen-go from "orchestra.proto"
// DO NOT EDIT!

package orchestra

import proto "code.google.com/p/goprotobuf/proto"
import "math"

// Reference proto, math & os imports to suppress error if they are not otherwise used.
var _ = proto.GetString
var _ = math.Inf
var _ error

type ProtoAcknowledgement_AckType int32

const (
	ProtoAcknowledgement_ACK_OK    = 1
	ProtoAcknowledgement_ACK_ERROR = 3
)

var ProtoAcknowledgement_AckType_name = map[int32]string{
	1: "ACK_OK",
	3: "ACK_ERROR",
}
var ProtoAcknowledgement_AckType_value = map[string]int32{
	"ACK_OK":    1,
	"ACK_ERROR": 3,
}

func NewProtoAcknowledgement_AckType(x int32) *ProtoAcknowledgement_AckType {
	e := ProtoAcknowledgement_AckType(x)
	return &e
}
func (x ProtoAcknowledgement_AckType) String() string {
	return proto.EnumName(ProtoAcknowledgement_AckType_name, int32(x))
}

type ProtoTaskResponse_TaskStatus int32

const (
	ProtoTaskResponse_JOB_INPROGRESS      = 2
	ProtoTaskResponse_JOB_SUCCESS         = 3
	ProtoTaskResponse_JOB_FAILED          = 4
	ProtoTaskResponse_JOB_HOST_FAILURE    = 5
	ProtoTaskResponse_JOB_UNKNOWN         = 6
	ProtoTaskResponse_JOB_UNKNOWN_FAILURE = 7
)

var ProtoTaskResponse_TaskStatus_name = map[int32]string{
	2: "JOB_INPROGRESS",
	3: "JOB_SUCCESS",
	4: "JOB_FAILED",
	5: "JOB_HOST_FAILURE",
	6: "JOB_UNKNOWN",
	7: "JOB_UNKNOWN_FAILURE",
}
var ProtoTaskResponse_TaskStatus_value = map[string]int32{
	"JOB_INPROGRESS":      2,
	"JOB_SUCCESS":         3,
	"JOB_FAILED":          4,
	"JOB_HOST_FAILURE":    5,
	"JOB_UNKNOWN":         6,
	"JOB_UNKNOWN_FAILURE": 7,
}

func NewProtoTaskResponse_TaskStatus(x int32) *ProtoTaskResponse_TaskStatus {
	e := ProtoTaskResponse_TaskStatus(x)
	return &e
}
func (x ProtoTaskResponse_TaskStatus) String() string {
	return proto.EnumName(ProtoTaskResponse_TaskStatus_name, int32(x))
}

type IdentifyClient struct {
	Hostname         *string `protobuf:"bytes,1,req,name=hostname"`
	XXX_unrecognized []byte
}

func (this *IdentifyClient) Reset()         { *this = IdentifyClient{} }
func (this *IdentifyClient) String() string { return proto.CompactTextString(this) }

type ProtoJobParameter struct {
	Key              *string `protobuf:"bytes,1,req,name=key"`
	Value            *string `protobuf:"bytes,2,req,name=value"`
	XXX_unrecognized []byte
}

func (this *ProtoJobParameter) Reset()         { *this = ProtoJobParameter{} }
func (this *ProtoJobParameter) String() string { return proto.CompactTextString(this) }

type ProtoTaskRequest struct {
	Jobname          *string              `protobuf:"bytes,1,req,name=jobname"`
	Id               *uint64              `protobuf:"varint,2,req,name=id"`
	Parameters       []*ProtoJobParameter `protobuf:"bytes,3,rep,name=parameters"`
	XXX_unrecognized []byte
}

func (this *ProtoTaskRequest) Reset()         { *this = ProtoTaskRequest{} }
func (this *ProtoTaskRequest) String() string { return proto.CompactTextString(this) }

type ProtoAcknowledgement struct {
	Id               *uint64                       `protobuf:"varint,1,req,name=id"`
	Response         *ProtoAcknowledgement_AckType `protobuf:"varint,2,req,name=response,enum=orchestra.ProtoAcknowledgement_AckType,def=1"`
	XXX_unrecognized []byte
}

func (this *ProtoAcknowledgement) Reset()         { *this = ProtoAcknowledgement{} }
func (this *ProtoAcknowledgement) String() string { return proto.CompactTextString(this) }

const Default_ProtoAcknowledgement_Response ProtoAcknowledgement_AckType = ProtoAcknowledgement_ACK_OK

type ProtoTaskResponse struct {
	Id               *uint64                       `protobuf:"varint,1,req,name=id"`
	Status           *ProtoTaskResponse_TaskStatus `protobuf:"varint,3,req,name=status,enum=orchestra.ProtoTaskResponse_TaskStatus"`
	Response         []*ProtoJobParameter          `protobuf:"bytes,4,rep,name=response"`
	XXX_unrecognized []byte
}

func (this *ProtoTaskResponse) Reset()         { *this = ProtoTaskResponse{} }
func (this *ProtoTaskResponse) String() string { return proto.CompactTextString(this) }

func init() {
	proto.RegisterEnum("orchestra.ProtoAcknowledgement_AckType", ProtoAcknowledgement_AckType_name, ProtoAcknowledgement_AckType_value)
	proto.RegisterEnum("orchestra.ProtoTaskResponse_TaskStatus", ProtoTaskResponse_TaskStatus_name, ProtoTaskResponse_TaskStatus_value)
}
